server:
  port: ${PORT:${SERVER_PORT:0}}
spring:
  application:
    name: api-serie
eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
# server:
#   port: ${PORT:${SERVER_PORT:0}}
# spring:
#   rabbitmq:
#     username: guest
#     password: guest
#     host: localhost
#     port: 5672
#   zipkin:
#     baseUrl: http://localhost:9411/
#   application:
#     name: api-serie
#   data:
#     mongodb:
#       username: usrspotifymongo
#       password: pwdspotifymongo
#       database: spotifydevmongo
#       port: 27017
#       host: localhost

# resilience4j.retry:
#   instances:
#     retryMusic:
#       maxAttempts: 3
#       waitDuration: 10s
#       enableExponentialBackoff: true
#       exponentialBackoffMultiplier: 2
#       retryExceptions:
#         - org.springframework.web.client.HttpServerErrorException
#         - java.io.IOException



# resilience4j.circuitbreaker:
#   instances:
#     clientMusic:
#       registerHealthIndicator: true
#       slidingWindowSize: 10
#       permittedNumberOfCallsInHalfOpenState: 3
#       slidingWindowType: TIME_BASED
#       minimumNumberOfCalls: 20
#       waitDurationInOpenState: 50s
#       failureRateThreshold: 50
#       eventConsumerBufferSize: 10
    
# eureka:
#   client:
#     registerWithEureka: true
#     fetchRegistry: true
#     serviceURL:
#       defaultZone: http://localhost:8761/eureka